{"version":3,"sources":["assets/banner-001.jpg","assets/banner-002.jpg","assets/banner-003.jpg","assets/banner-004.jpg","assets/banner-005.jpg","skeletons/Home.tsx","api/index.ts","components/TopNav.tsx","utils/index.ts","components/Footer.tsx","skeletons/Detail.tsx","pages/Box.tsx","router/config.ts","pages/Home.tsx","pages/Detail.tsx","pages/Search.tsx","errors/NotFound.tsx","router/RouterView.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/loading.svg"],"names":["module","exports","__webpack_require__","p","CardListSkeleton","props","column","list","Array","fill","react_default","a","createElement","Fragment","map","item","index","className","key","card","loading","cover","src","loadingSvg","alt","CardListTop250Skeleton","join","ListSkeleton","row","skeleton","paragraph","title","rows","BASE_URL","API_KEY","http","source","axios","CancelToken","window","cancalXHRList","push","create","baseURL","timeout","params","apikey","cancelToken","token","getHotShowing","get","getContentBySearch","str","concat","withRouter","_useState","useState","_useState2","Object","slicedToArray","hostShowTitle","setHostShowTitle","_useState3","_useState4","hotShowList","setHotShowList","_useState5","_useState6","suggestList","setSuggestList","_useState7","getSearchHistory","slice","searchHistory","_useState9","_useState10","searchStr","setSearchStr","_useState11","_useState12","isShowSuggestBox","setIsShowSuggestBox","_useState13","_useState14","isShowTipsPanel","setIsShowTipsPanel","_useState15","_useState16","isTopNavFixed","setIsTopNavFixed","navToSearch","trim","search","data","isTraditional","arguments","length","undefined","arr","_loop","field","encodeURIComponent","serialize","q","history","pathname","JSON","parse","localStorage","getItem","addSearchHistory","cache","some","c","id","unshift","pop","setItem","stringify","getSearch","ev","value","target","isValid","getSuggestionBySearch","closeSuggest","renderTopBar","react_router_dom","to","slotTitle","onClick","icon","type","placeholder","onChange","nativeEvent","stopImmediatePropagation","onKeyDown","keyCode","style","display","original_title","_","count","then","_ref","subjects","useEffect","start","_ref2","document","addEventListener","removeEventListener","noAffix","affix","isFixed","Footer","href","divider","Detail","statistic","avatar","Box","React","Component","config","path","component","newMovieList","setNewMovieList","goodBoxList","setGoodBoxList","_useState8","weeklyBox","setWeeklyBox","top250List","setTop250List","boxLastDate","setBoxLastDate","isLoadingHotShow","setIsLoadingHotShow","isLoadingNewMovie","setIsLoadingNewMovie","_useState17","_useState18","isLoadingGoodBox","setIsLoadingGoodBox","_useState19","_useState20","isLoadingWeeklyBox","setIsLoadingWeeklyBox","_useState21","_useState22","isLoadingTop250","setIsLoadingTop250","bannerList","imgBanner001","imgBanner002","imgBanner003","imgBanner004","imgBanner005","_ref3","date","_ref4","_ref5","components_TopNav","carousel","autoplay","hoverable","LazyLoad_default","height","offsetTop","images","small","es_tag","rating","average","Meta","description","genres","summary","rank","box","subject","collect_count","summaryList","new","dangerouslySetInnerHTML","__html","len","groupList","s","e","g","n","isFirst","renderTop250","match","isAutoPlay","currentPlayData","setCurrentPlayData","detailData","setDetailData","isLoadingDetail","setIsLoadingDetail","isOpenPlayBox","setIsOpenPlayBox","galleryBox","playThisVideo","_split","split","_split2","$units","$decimal","setTimeout","clearTimeout","galleryBoxEl","width","from","children","child","w","getComputedStyle","replace","Math","ceil","reCalcGalleryBoxWidth","ratings_count","tags","tag","directors","name","casts","typography","Paragraph","ellipsis","expandable","photos_count","data-id","ref","current","photos","image","trailer_urls","color","theme","reviews_count","popular_reviews","author","created_at","comment","rate","disabled","defaultValue","max","content","datetime","tooltip","moment","format","fromNow","comments_count","popular_comments","useful_count","useless_count","actions","paddingLeft","cursor","drawer","placement","destroyOnClose","onClose","visible","autoPlay","controls","es_list","itemLayout","size","dataSource","trailers","renderItem","Item","extra","medium","resource_url","location","decodeURIComponent","reduce","prev","cur","flag","indexOf","val","reSerialize","searchPageSize","searchData","setSearchData","refPageBox","useRef","refRateBox","changeSearchData","refPageBoxHeight","refRateBoxHeight","cssText","pagination","total","setSrc","idx","mkt","url","backgroundImage","CustomRoute","beforeEnter","react_router","matchRoute","routerMap","find","RegExp","test","exact","hasChild","RouterView","routerBeforeEnterHook","scrollTo","top","behavior","forEach","cancel","locale","App","locale_provider","zhCN","Boolean","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db76ee04.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner-001.0f7e17ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner-002.98a4e483.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner-003.acb37150.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner-004.d8c44150.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner-005.c87197be.jpg\";","import React from 'react';\nimport { Card, Skeleton } from 'antd';\nimport loadingSvg from '../assets/loading.svg';\n\ninterface ICardList {\n  column: number,\n}\n\nexport function CardListSkeleton(props: ICardList) {\n  let { column } = props;\n  let list = new Array(column || 6).fill(1);\n  return (\n    <>\n      {\n        list.map((item: any, index: number) => {\n          return (\n            <div className=\"card-container\" key={index}>\n              <Card\n                key={index}\n                loading={true}\n                className=\"movie-card\"\n                cover={\n                  <div className=\"loading-img-box\">\n                    <img src={loadingSvg} alt=\"loading\" />\n                  </div>\n                }\n              />\n            </div>\n          );\n        })\n      }\n    </>\n  );\n}\n\nexport function CardListTop250Skeleton() {\n  let list = new Array(9).fill(1);\n  return (\n    <div className=\"cards-box cards-box--top250 clearfix\">\n      {\n        list.map((item: any, index: number) => {\n          return (\n            <div className={[\"card-container\", index === 0 ? \"card-big\" : \"\"].join(\" \")} key={index}>\n              <Card\n                key={index}\n                loading={true}\n                className=\"movie-card\"\n                cover={\n                  <div className=\"loading-img-box\">\n                    <img src={loadingSvg} alt=\"loading\" />\n                  </div>\n                }\n              />\n            </div>\n          );\n        })\n      }\n    </div>\n  );\n}\n\ninterface IList {\n  row: number,\n}\n\nexport function ListSkeleton(props: IList) {\n  let { row } = props;\n  let list = new Array(row || 4).fill(1);\n  return (\n    <>\n      {\n        list.map((item: any, index: number) => {\n          return (\n            <li className=\"goodbox-rate\" key={index}>\n              <Skeleton className=\"title\" paragraph={false} />\n              <Skeleton className=\"summary\" title={false} paragraph={{ rows: 1 }} />\n              <span className=\"rank\">0</span>\n              <span className=\"box\">0 万</span>\n            </li>\n          );\n        })\n      }\n    </>\n  );\n}\n","import axios from \"axios\";\n\n\ndeclare global {\n  interface Window {\n    cancalXHRList: any\n  }\n}\n\nconst BASE_URL = \"/api/movie\";\nconst API_KEY = \"0b2bdeda43b5688921839c8ecb20399b\";\n\n\nwindow.cancalXHRList = [];\n\nfunction http() {\n  const CancelToken = axios.CancelToken;\n  const source = CancelToken.source();\n\n  window.cancalXHRList.push(source);\n\n  let instance: any = axios.create({\n    baseURL: BASE_URL,\n    timeout: 3e4,\n    params: {\n      \"apikey\": API_KEY,\n    },\n    cancelToken: source.token,\n  });\n\n  return instance;\n}\n\n// 热映\nexport function getHotShowing(params?: any) {\n  return http().get(\"/in_theaters\", {\n    params,\n  });\n}\n\n// top250\nexport function getTop250(params?: any) {\n  return http().get(\"/top250\", {\n    params,\n  });\n}\n\n// 新片\nexport function getNew() {\n  return http().get(\"/new_movies\");\n}\n\n// 电影详情\nexport function getDetail(id: string) {\n  return http().get(`/subject/${id}`);\n}\n\n// 北美票房榜\nexport function getGoodbox() {\n  return http().get(\"/us_box\");\n}\n\n// 搜索条目\nexport function getContentBySearch(str: string, params?: any) {\n  return http().get(`/search?q=${str}`, {\n    params\n  });\n}\n\n// 口碑榜\nexport function getWeeklyMovie() {\n  return http().get(\"/weekly\");\n}\n\nexport function getWallPaper() {\n  return axios.get(\"/bing/HPImageArchive.aspx\", {\n    params: {\n      format: \"js\",\n      idx: 0,\n      n: 1,\n      mkt: \"zh-CN\",\n    }\n  });\n}\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter, Link } from 'react-router-dom';\nimport { Icon, Affix } from 'antd';\nimport { getHotShowing, getContentBySearch } from \"../api\";\nimport * as _ from \"lodash\";\nimport { serialize } from '../utils';\nimport '../css/Home.css';\n\n\nfunction TopNav(props: any) {\n  let [hostShowTitle, setHostShowTitle] = useState(\"\");\n  let [hotShowList, setHotShowList] = useState<any>([]);\n  let [suggestList, setSuggestList] = useState<any>([]);\n  let [searchHistory] = useState(getSearchHistory().slice(0));\n  let [searchStr, setSearchStr] = useState(\"\");\n  let [isShowSuggestBox, setIsShowSuggestBox] = useState(false);\n  let [isShowTipsPanel, setIsShowTipsPanel] = useState(true);\n  let [isTopNavFixed, setIsTopNavFixed] = useState(false);\n\n  function navToSearch() {\n    searchStr = searchStr.trim();\n\n    if (searchStr === \"\") {\n      searchStr = hostShowTitle;\n    }\n\n    let query = {\n      q: searchStr,\n    };\n\n    let search = serialize(query);\n\n    props.history.push({\n      pathname: '/search',\n      search,\n    });\n  }\n\n  function getSearchHistory() {\n    const KEY = \"SEARCH_H\";\n    let cache = JSON.parse(localStorage.getItem(KEY) || \"[]\");\n    return cache;\n  }\n\n  function addSearchHistory(item: any) {\n    const MAX_LEN_CACHE_SEARCH = 5;\n    const KEY = \"SEARCH_H\";\n    let cache = getSearchHistory().slice(0);\n\n    let isExist = cache.some((c: any) => {\n      return c.id === item.id;\n    });\n\n    if (!isExist) {\n      cache.unshift(item);\n      if (cache.length > MAX_LEN_CACHE_SEARCH) {\n        cache.pop();\n      }\n      localStorage.setItem(KEY, JSON.stringify(cache));\n    }\n  }\n\n  function getContentBySearchDebounce() {\n    return _.debounce(function (value) {\n      getContentBySearch(value, {\n        count: 5,\n      })\n        .then(({ data }: any) => {\n          let { subjects } = data;\n          setSuggestList(subjects);\n        });\n    }, 5e2);\n  }\n\n  function getSearch(ev: any) {\n    let value = ev.target.value;\n    let str = value.trim();\n    let isValid = str.length > 0;\n\n    setSearchStr(value);\n    setIsShowTipsPanel(!isValid);\n\n    // close showlist\n    isValid && getSuggestionBySearch(str);\n\n  }\n\n  function closeSuggest() {\n    setIsShowSuggestBox(false);\n  }\n\n  function renderTopBar() {\n    return (\n      <div className={[\"header-bar\", isTopNavFixed ? \"head-bar--fixed\" : \"\"].join(\" \")}>\n        <div className=\"bar-container clearfix\">\n          <span className=\"bar-top\">\n            <Link to=\"/home\">\n              <div className=\"logo\"></div>\n              <div className=\"slot-title\">{props.slotTitle}</div>\n            </Link>\n          </span>\n          <div className=\"search\">\n            <div className=\"search-box\">\n              <div className=\"search-btn\" onClick={navToSearch}>\n                <Icon type=\"search\" />\n                <span>全网搜</span>\n              </div>\n              <input className=\"search-input\"\n                placeholder={hostShowTitle}\n                value={searchStr}\n                onChange={getSearch}\n                onClick={ev => {\n                  ev.nativeEvent.stopImmediatePropagation();\n                  setIsShowSuggestBox(true);\n                }}\n                onKeyDown={ev => {\n                  setIsShowSuggestBox(true);\n                  if (ev.keyCode === 13) {\n                    setIsShowSuggestBox(false);\n                    navToSearch();\n                  }\n                }} />\n            </div>\n            <div className=\"search-list\" style={\n              {\n                \"display\": isShowSuggestBox ? \"block\" : \"none\",\n              }\n            }\n              onClick={ev => { ev.nativeEvent.stopImmediatePropagation() }}>\n              {\n                isShowTipsPanel ?\n                  <div>\n                    <div className=\"list-history\" style={\n                      {\n                        \"display\": searchHistory.length > 0 ? \"block\" : \"none\",\n                      }\n                    }>\n                      <h4 className=\"panel-title\">历史记录</h4>\n                      <ul>\n                        {\n                          searchHistory.map((item: any, index: number) => {\n                            return (\n                              <li className=\"list-item\" key={index}>\n                                <Link to={`/detail/${item.id}`}>\n                                  <h5 className=\"title\">{item.title}</h5>\n                                </Link>\n                              </li>\n                            );\n                          })\n                        }\n                      </ul>\n                    </div>\n                    <div className=\"list-hot\">\n                      <h4 className=\"panel-title\">热映</h4>\n                      <ul>\n                        {\n                          hotShowList.slice(0, 8).map((item: any, index: number) => {\n                            return (\n                              <li className=\"list-item\" key={index}>\n                                <Link to={`/detail/${item.id}`}\n                                  onClick={(ev: any) => {\n                                    addSearchHistory({\n                                      id: item.id,\n                                      title: item.title,\n                                    });\n                                  }}>\n                                  <span className=\"index\">{+index + 1}</span>\n                                  <span className=\"title\">{item.title}</span>\n                                </Link>\n                              </li>\n                            );\n                          })\n                        }\n                      </ul>\n                    </div>\n                  </div>\n                  :\n                  <div className=\"list-suggest\">\n                    <ul>\n                      {\n                        suggestList.map((item: any, index: number) => {\n                          return (\n                            <li className=\"list-item\" key={index}>\n                              <Link to={`/detail/${item.id}`}\n                                onClick={(ev: any) => {\n                                  addSearchHistory({\n                                    id: item.id,\n                                    title: item.title,\n                                  });\n                                }}>\n                                <h5 className=\"title\">{item.title}</h5>\n                                <p className=\"origin_title\">{item.original_title}</p>\n                              </Link>\n                            </li>\n                          );\n                        })\n                      }\n                    </ul>\n                  </div>\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  let getSuggestionBySearch = getContentBySearchDebounce();\n\n  // componentDidMount\n  useEffect(() => {\n    getHotShowing({\n      start: 0,\n      count: 12,\n    })\n      .then(({ data }: any) => {\n        let { subjects } = data;\n\n        let title = subjects.length > 0 ? subjects[0].title : \"\";\n\n        setHostShowTitle(title);\n        setHotShowList(subjects);\n      });\n\n\n\n    document.addEventListener(\"click\", closeSuggest);\n\n    return () => {\n      // componentWillUnMount\n      document.removeEventListener(\"click\", closeSuggest);\n    }\n  }, []);\n\n\n  if (props.noAffix) {\n    return renderTopBar();\n  }\n\n  return (\n    <Affix onChange={(isFixed: any) => {\n      setIsTopNavFixed(!!isFixed);\n    }}>\n      {renderTopBar()}\n    </Affix>\n  );\n\n}\n\n\nexport default withRouter(TopNav);\n","// serialize data  e.g. {a:\"abc\",b:\"123\"} -> \"a=abc&b=123\"\nexport function serialize(data: any, isTraditional: boolean = false): string {\n  let arr = [];\n  if (typeof data == \"object\") {\n    for (let key in data) {\n      if (data[key] != null) {\n        let item = data[key];\n        if (isTraditional && item instanceof Array) {\n          arr.push(item.map(function (field) {\n            return encodeURIComponent(key) + \"=\" + encodeURIComponent(field);\n          }).join(\"&\"));\n        } else {\n          arr.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(item));\n        }\n      }\n    }\n    return arr.join(\"&\");\n  }\n  return '';\n}\n/**\n* reverse serialize data  e.g. \"a=abc&b=123\" -> {\"a\":\"abc\",\"b\":\"123\"}\n* @param {string} str\n* @param {boolean} isTraditional if true e.g. \"a=abc&b=123&b=456\" -> {\"a\":\"abc\",\"b\":[\"123\",\"456\"]}\n*/\nexport function reSerialize(str: string, isTraditional = true): object {\n  let s = decodeURIComponent(str);\n\n  return s.split(\"&\").reduce(function (prev:any, cur) {\n    let flag = cur.indexOf(\"=\");\n    let key = cur.slice(0, flag);\n    let val = cur.slice(flag + 1);\n\n    if (isTraditional) {\n      if (prev[key]) {\n        prev[key] instanceof Array ? prev[key].push(val) : prev[key] = [prev[key], val];\n      } else {\n        prev[key] = val;\n      }\n    } else {\n      prev[key] = val;\n    }\n\n    return prev;\n  }, {});\n}\n","import React from \"react\";\nimport { Divider } from 'antd';\n\n\nexport default function () {\n  return (\n    <div className=\"footer\">\n      <div className=\"footer-block content-origin\">\n        <span>免责声明：内容来源于 <a href=\"https://movie.douban.com/\" target=\"_blank\">豆瓣电影</a> ，接口来源于网络，侵删，禁止商业用途使用</span>\n      </div>\n      <div className=\"footer-block copyright\">\n        <span>Copyright &copy;2019 <a href=\"https://github.com/Yangfan2016\" target=\"_blank\">yangfan2016</a> &lt;15234408101@163.com&gt;</span>\n        <Divider type=\"vertical\" />\n        <span><a href=\"https://github.com/Yangfan2016/douban-movie-web/blob/master/LICENSE\" target=\"_blank\">MIT</a></span>\n      </div>\n      <div className=\"footer-block menu\">\n        <span><a href=\"https://github.com/Yangfan2016\" target=\"_blank\">关于我</a></span>\n        <Divider type=\"vertical\" />\n        <span><a href=\"https://github.com/Yangfan2016\" target=\"_blank\">About me</a></span>\n        <Divider type=\"vertical\" />\n        <span><a href=\"https://github.com/Yangfan2016\" target=\"_blank\">Github</a></span>\n        <Divider type=\"vertical\" />\n        <span><a href=\"https://juejin.im/user/5bd570f86fb9a05d396f5d50\" target=\"_blank\">掘金</a></span>\n        <Divider type=\"vertical\" />\n        <span><a href=\"https://yangfan2016.github.io\" target=\"_blank\">博客</a></span>\n      </div>\n    </div>\n  );\n};\n\n\n\n\n\n\n","import React from 'react';\nimport { Statistic, Skeleton } from 'antd';\n\nexport default function () {\n  return (\n    <div className=\"page page-detail\">\n      <div className=\"poster-box\">\n        <div className=\"profile\">\n          <div className=\"profile-rate\">\n            <div className=\"rate\">\n              <span className=\"units\">0</span>\n            </div>\n            <Statistic\n              title=\"评价人数\"\n              value=\"0\"\n              className=\"box\" />\n          </div>\n          <div className=\"block profile-img-loading\"></div>\n          <div className=\"block profile-info\">\n            <Skeleton />\n          </div>\n          <div className=\"block profile-reviews\">\n            <Skeleton avatar paragraph={{ rows: 4 }} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nclass Box extends React.Component {\n  render() {\n    return (\n      <div>Box page</div>\n    );\n  }\n}\n\nexport default Box;\n","\nimport Home from '../pages/Home';\nimport Detail from '../pages/Detail';\nimport Box from '../pages/Box';\nimport Search from '../pages/Search';\n\nimport NotFound from '../errors/NotFound';\n\nexport default [\n  {\n    path: '/home',\n    component: Home,\n  },\n  {\n    path: '/detail/:id',\n    component: Detail,\n  },\n  {\n    path: '/box',\n    component: Box,\n  },\n  {\n    path: '/search',\n    component: Search,\n  },\n  {\n    path: '/404',\n    component: NotFound,\n  }\n];","import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Card, Tag, Carousel } from 'antd';\nimport { CardListTop250Skeleton, CardListSkeleton, ListSkeleton } from \"../skeletons/Home\";\nimport TopNav from '../components/TopNav';\nimport Footer from '../components/Footer';\nimport { getHotShowing, getNew, getGoodbox, getWeeklyMovie, getTop250 } from \"../api\";\nimport * as _ from \"lodash\";\nimport LazyLoad from \"react-lazy-load\";\nimport '../css/Home.css';\n\n// temp banner\nimport imgBanner001 from '../assets/banner-001.jpg';\nimport imgBanner002 from '../assets/banner-002.jpg';\nimport imgBanner003 from '../assets/banner-003.jpg';\nimport imgBanner004 from '../assets/banner-004.jpg';\nimport imgBanner005 from '../assets/banner-005.jpg';\n\n\nexport default function () {\n\n  let [hotShowList, setHotShowList] = useState<any>([]); // 热映\n  let [newMovieList, setNewMovieList] = useState<any>([]); // 新片\n  let [goodBoxList, setGoodBoxList] = useState<any>([]); // 票房榜\n  let [weeklyBox, setWeeklyBox] = useState<any>([]); // 口碑榜\n  let [top250List, setTop250List] = useState<any>([]); // top250\n  let [boxLastDate, setBoxLastDate] = useState(\"\");\n  let [isLoadingHotShow, setIsLoadingHotShow] = useState(true);\n  let [isLoadingNewMovie, setIsLoadingNewMovie] = useState(true);\n  let [isLoadingGoodBox, setIsLoadingGoodBox] = useState(true);\n  let [isLoadingWeeklyBox, setIsLoadingWeeklyBox] = useState(true);\n  let [isLoadingTop250, setIsLoadingTop250] = useState(true);\n\n  // temp\n  let bannerList = [\n    imgBanner001,\n    imgBanner002,\n    imgBanner003,\n    imgBanner004,\n    imgBanner005\n  ];\n\n  function renderTop250() {\n    let len = top250List.length;\n    let count = len / 9 | 0;\n    let groupList = new Array(count).fill(0);\n\n    groupList = groupList.map((item: any, index: number) => {\n      let s = 9 * index;\n      let e = s + 9;\n      return top250List.slice(s, e);\n    });\n\n    return (\n      groupList.map((g: any, n: number) => {\n        return (\n          <div className=\"cards-box cards-box--top250 clearfix\" key={n}>\n            {\n              g.map((item: any, index: number) => {\n                let isFirst = index === 0;\n                return (\n                  <div className={[\"card-container\", isFirst ? \"card-big\" : \"\"].join(\" \")} key={n + index}>\n                    <Card\n                      className=\"movie-card\"\n                      hoverable\n                      cover={\n                        <Link to={`/detail/${item.id}`}>\n                          <LazyLoad height={isFirst ? 600 : 300} offsetTop={500}>\n                            <img className=\"card-img\" src={item.images.small} />\n                          </LazyLoad>\n                        </Link>\n                      }\n                    >\n                      <Tag className=\"img-tag tag-orange\">{item.rating.average}</Tag>\n                      <Card.Meta\n                        title={item.title}\n                        description={item.genres.join(\"/\")}\n                      />\n                    </Card>\n                  </div>\n                );\n              })\n            }\n          </div>\n        );\n      })\n    );\n\n  }\n\n  useEffect(() => {\n\n    getHotShowing({\n      start: 0,\n      count: 12,\n    })\n      .then(({ data }: any) => {\n        let { subjects } = data;\n\n        setHotShowList(subjects);\n        setIsLoadingHotShow(false);\n      });\n\n    getNew()\n      .then(({ data }: any) => {\n        let { subjects } = data;\n\n        setNewMovieList(subjects);\n        setIsLoadingNewMovie(false);\n      });\n\n    getGoodbox()\n      .then(({ data }: any) => {\n        let { subjects, date } = data;\n\n        setBoxLastDate(date);\n        setGoodBoxList(subjects);\n        setIsLoadingGoodBox(false);\n      });\n\n    getWeeklyMovie()\n      .then(({ data }: any) => {\n        let { subjects } = data;\n\n        setWeeklyBox(subjects);\n        setIsLoadingWeeklyBox(false);\n      });\n\n    getTop250({\n      count: 36,\n    })\n      .then(({ data }: any) => {\n        let { subjects } = data;\n\n        setTop250List(subjects);\n        setIsLoadingTop250(false);\n      });\n  }, []);\n\n\n  return (\n    <div>\n      <div className=\"header\">\n        <TopNav />\n        <div className=\"header-banner\">\n          <Carousel autoplay>\n            {bannerList.map((item: any, index: number) => {\n              return (\n                <div\n                  className=\"banner-item\"\n                  key={index}>\n                  <img src={item} alt=\"banner\" />\n                </div>\n              );\n            })}\n          </Carousel>\n        </div>\n      </div>\n      <div className=\"page page-home\">\n        <div className=\"block block-hotshow\">\n          <div className=\"line-raw\">\n            <h2 className=\"raw-title\">正在热映</h2>\n          </div>\n          <div className=\"cards-box clearfix\">\n            {\n              isLoadingHotShow ?\n                <CardListSkeleton column={6} /> :\n                hotShowList.map((item: any, index: number) => {\n                  return (\n                    <div className=\"card-container\" key={index}>\n                      <Card\n                        className=\"movie-card\"\n                        hoverable\n                        cover={\n                          <Link to={`/detail/${item.id}`}>\n                            <LazyLoad height={300} offsetTop={500}>\n                              <img src={item.images.small} />\n                            </LazyLoad>\n                          </Link>\n                        }\n                      >\n                        <Tag className=\"img-tag tag-orange\">{item.rating.average}</Tag>\n                        <Card.Meta\n                          title={item.title}\n                          description={item.genres.join(\"/\")}\n                        />\n                      </Card>\n                    </div>\n                  );\n                })}\n          </div>\n        </div>\n        <div className=\"block block-newmovie\">\n          <div className=\"line-raw\">\n            <h2 className=\"raw-title\">新片榜</h2>\n          </div>\n          <div className=\"cards-box clearfix\">\n            {\n              isLoadingNewMovie ?\n                <CardListSkeleton column={4} /> :\n                newMovieList.map((item: any, index: number) => {\n                  return (\n                    <div className=\"card-container\" key={index}>\n                      <Card\n                        className=\"movie-card\"\n                        hoverable\n                        cover={\n                          <Link to={`/detail/${item.id}`}>\n                            <LazyLoad height={300} offsetTop={500}>\n                              <img src={item.images.small} />\n                            </LazyLoad>\n                          </Link>\n                        }\n                      >\n                        <Tag className=\"img-tag tag-orange\">{item.rating.average}</Tag>\n                        <Card.Meta\n                          title={item.title}\n                          description={item.genres.join(\"/\")}\n                        />\n                      </Card>\n                    </div>\n                  );\n                })}\n          </div>\n          <div className=\"rate-box\">\n            <div className=\"line-raw\">\n              <h2 className=\"raw-title\">北美票房榜</h2>\n              <p>{boxLastDate} 更新/美元</p>\n            </div>\n            <ul className=\"goodbox\">\n              {\n                isLoadingGoodBox ?\n                  <ListSkeleton row={2} /> :\n                  goodBoxList.map((item: any, index: number) => {\n                    let { rank, box, subject } = item;\n                    let { title, id, rating, collect_count } = subject;\n                    let { average } = rating;\n\n                    let isNew = item.new;\n\n                    let summaryList = [];\n                    let summary = \"\";\n\n                    if (isNew) {\n                      summaryList.push(\"<span class='box-new'>新上榜</span>\");\n                    }\n\n                    summaryList.push(`${average || 0} 分`);\n                    summaryList.push(`${collect_count} 收藏`);\n                    summary = summaryList.join(\" / \");\n\n                    return (\n                      <li className=\"goodbox-rate\" key={index}>\n                        <Link to={`/detail/${id}`}>\n                          <h3 className=\"title\">{title}</h3>\n                          <p className=\"summary\" dangerouslySetInnerHTML={{ __html: summary }}></p>\n                          <span className=\"rank\">{rank}</span>\n                          <span className=\"box\">{box / 1e4} 万</span>\n                        </Link>\n                      </li>\n                    );\n                  })\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"block block-weekly\">\n          <div className=\"line-raw\">\n            <h2 className=\"raw-title\">一周口碑榜</h2>\n            <div className=\"spotbox\">\n              <div className=\"spot\"></div>\n              <div className=\"spot\"></div>\n              <div className=\"spot\"></div>\n            </div>\n          </div>\n          <div className=\"cards-box weekly-box clearfix\">\n            {\n              weeklyBox.slice(0, 6).map((item: any, index: number) => {\n                let { subject } = item;\n                let { rating, title } = subject;\n                let { average } = rating;\n                return (\n                  <div className=\"card-container\" key={index}>\n                    <div className=\"rate\">{average} 分</div>\n                    <div className=\"title\">{title}</div>\n                    <div className=\"dot\"></div>\n                  </div>\n                );\n              })\n            }\n          </div>\n          <div className=\"cards-box clearfix\">\n            {\n              isLoadingWeeklyBox ?\n                <CardListSkeleton column={6} /> :\n                weeklyBox.slice(0, 6).map((item: any, index: number) => {\n                  let { subject } = item;\n                  let { rating, title, id, images, genres } = subject;\n                  let { average } = rating;\n                  return (\n                    <div className=\"card-container\" key={index}>\n                      <Card\n                        className=\"movie-card\"\n                        hoverable\n                        cover={\n                          <Link to={`/detail/${id}/#`}>\n                            <LazyLoad height={300} offsetTop={500}>\n                              <img src={images.small} />\n                            </LazyLoad>\n                          </Link>\n                        }\n                      >\n                        <Tag className=\"img-tag tag-orange\">{average}</Tag>\n                        <Card.Meta\n                          title={title}\n                          description={genres.join(\"/\")}\n                        />\n                      </Card>\n                    </div>\n                  );\n                })}\n          </div>\n        </div>\n        <div className=\"block block-top250\">\n          <div className=\"line-raw\">\n            <h2 className=\"raw-title\">Top 250</h2>\n          </div>\n          {\n            isLoadingTop250 ?\n              <CardListTop250Skeleton /> :\n              renderTop250()\n          }\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Tag, Statistic, Comment, Avatar, Tooltip, Rate, Icon, Drawer, List, Typography } from 'antd';\nimport moment from 'moment';\nimport PageSkeleton from '../skeletons/Detail';\nimport { getDetail } from '../api';\nimport '../css/Detail.css';\n\n\nexport default function (props: any) {\n  let { params } = props.match;\n\n  let [currentPlayData, setCurrentPlayData] = useState<any>({\n    index: 0,\n    isAutoPlay: true,\n  });\n  let [detailData, setDetailData] = useState<any>({});\n  let [isLoadingDetail, setIsLoadingDetail] = useState(true);\n  let [isOpenPlayBox, setIsOpenPlayBox] = useState(false);\n  let galleryBox: any = null;\n\n  function reCalcGalleryBoxWidth() {\n    // 重新计算图片画廊的宽度\n    if (!galleryBox) return;\n    let galleryBoxEl: HTMLElement | null = galleryBox;\n    if (galleryBoxEl) {\n      let width = 0;\n      Array.from(galleryBoxEl.children).map((child: Element) => {\n        let w = +(getComputedStyle(child).width || '0').replace(\"px\", \"\");\n        w = Math.ceil(w);\n        width += w;\n      });\n      galleryBoxEl.style.width = `${width}px`;\n    }\n  }\n  function playThisVideo(src: string, index: number) {\n    setCurrentPlayData({\n      src,\n      index,\n      isAutoPlay: true,\n    });\n  }\n\n  function openPlayBox(src: string) {\n    playThisVideo(src, 0);\n    setIsOpenPlayBox(true);\n  }\n\n  function closePlayBox() {\n    setIsOpenPlayBox(false);\n  }\n\n  useEffect(() => {\n    getDetail(params.id)\n      .then(({ data }: any) => {\n        // 处理下数据\n        let average = data.rating.average;\n        let [$units, $decimal] = (\"\" + average).split(\".\");\n\n        data.$units = $units || 0;\n        data.$decimal = $decimal || 0;\n\n        setDetailData(data);\n        setIsLoadingDetail(false);\n\n      });\n  }, []);\n\n  useEffect(() => {\n    if (isLoadingDetail === true) return;\n\n    // BUG 需要等待所有图片加载完，才能获取到宽度\n    let id = setTimeout(() => {\n      clearTimeout(id);\n      reCalcGalleryBoxWidth();\n    }, 3e3);\n\n  }, [isLoadingDetail]);\n\n\n  if (isLoadingDetail) {\n    return <PageSkeleton />;\n  }\n  if (!detailData.id) return '';\n  return (\n    <>\n      <div className=\"page page-detail\">\n        <div className=\"poster-box\">\n          <div className=\"profile\">\n            <div className=\"profile-rate\">\n              <div className=\"rate\">\n                <span className=\"units\">{detailData.$units}</span>\n                {\n                  detailData.$units > 0 &&\n                  <span className=\"decimal\">.{detailData.$decimal}</span>\n                }\n              </div>\n              <Statistic\n                title=\"评价人数\"\n                value={detailData.ratings_count}\n                className=\"box\" />\n              <h2 className=\"title\">{detailData.original_title}</h2>\n            </div>\n            <div className=\"block profile-img\">\n              <img src={detailData.images.small} alt=\"\" />\n            </div>\n            <div className=\"block profile-info\">\n              <h2 className=\"raw-title\">{detailData.title}</h2>\n              <div className=\"tags\">\n                {\n                  detailData.tags.map((tag: string, index: number) => {\n                    return <Tag className=\"tag-text\" key={index}>{tag}</Tag>\n                  })\n                }\n              </div>\n              <div className=\"directors\">\n                <label>导演：</label>\n                {\n                  detailData.directors.map((item: any, index: number) => {\n                    return <a key={index} className=\"person\">{item.name}</a>\n                  })\n                }\n              </div>\n              <div className=\"actors\">\n                <label>演员：</label>\n                {\n                  detailData.casts.map((item: any, index: number) => {\n                    let split = \"\";\n                    if (index !== 0) {\n                      split = \"/\";\n                    }\n                    return (\n                      <span key={index}>\n                        {split}\n                        <a className=\"person\">{item.name}</a>\n                      </span>\n                    );\n                  })\n                }\n              </div>\n              <div className=\"video_summary\">\n                <Typography.Paragraph className=\"summary\"\n                  ellipsis={\n                    {\n                      rows: 3,\n                      expandable: true,\n                    }\n                  }>\n                  {detailData.summary}\n                </Typography.Paragraph>\n              </div>\n            </div>\n            <div className=\"block profile-photos\">\n              <h2 className=\"raw-title\">剧照（{detailData.photos_count}）</h2>\n              <div className=\"photos-box\">\n                <div className=\"box-gallery\" data-id={detailData.id} key={detailData.id} ref={current => galleryBox = current}>\n                  {\n                    detailData.photos.map((item: any, index: number) => {\n                      let { image, alt } = item;\n\n                      return (\n                        <div className=\"gallery-img\" key={index}>\n                          {index === 0 && detailData.trailer_urls.length > 0 && (\n                            <>\n                              <Tag color=\"#f50\" className=\"img-tag\">预告片</Tag>\n                              <Icon\n                                type=\"play-circle\"\n                                theme=\"filled\"\n                                className=\"img-icon\"\n                                onClick={(ev) => { openPlayBox(detailData.trailer_urls[currentPlayData.index]) }} />\n                            </>\n                          )}\n                          <img src={image} alt={alt} />\n                        </div>\n                      );\n                    })\n                  }\n                </div>\n              </div>\n            </div>\n            <div className={[\"drawer-in\", isOpenPlayBox ? \"drawer-fixed-bottom\" : \"\"].join(\" \")}>\n              <div className=\"block profile-reviews\">\n                <h2 className=\"raw-title\">影评（{detailData.reviews_count}）</h2>\n                {\n                  detailData.popular_reviews.map((item: any, index: number) => {\n                    let {\n                      author,\n                      rating,\n                      title,\n                      summary,\n                      created_at,\n                    } = item;\n\n                    return (\n                      <Comment\n                        className=\"cutsom-ant-comment\"\n                        key={index}\n                        author={(\n                          <>\n                            <span>{author.name}</span>\n                            <Rate\n                              className=\"custom-ant-rate\"\n                              disabled\n                              defaultValue={rating.value}\n                              count={rating.max} />\n                          </>\n                        )}\n                        avatar={(\n                          <Avatar\n                            src={author.avatar}\n                            alt={author.alt}\n                          />\n                        )}\n                        content={(\n                          <>\n                            <a>{title}</a>\n                            <p>{summary}</p>\n                          </>\n                        )}\n                        datetime={(\n                          <Tooltip title={moment(created_at).format('YYYY-MM-DD HH:mm:ss')}>\n                            <span>{moment(created_at).fromNow()}</span>\n                          </Tooltip>\n                        )}\n                      />\n                    );\n                  })\n                }\n              </div>\n              <div className=\"block profile-comments\">\n                <h2 className=\"raw-title\">热评（{detailData.comments_count}）</h2>\n                {\n                  detailData.popular_comments.map((item: any, index: number) => {\n                    let {\n                      author,\n                      rating,\n                      content,\n                      created_at,\n                      useful_count,\n                      useless_count,\n                    } = item;\n\n                    const actions = [\n                      <span>\n                        <Tooltip title=\"Like\">\n                          <Icon\n                            type=\"like\"\n                            theme='filled'\n                          />\n                        </Tooltip>\n                        <span style={{ paddingLeft: 8, cursor: 'auto' }}>\n                          {useful_count || 0}\n                        </span>\n                      </span>,\n                      <span>\n                        <Tooltip title=\"Dislike\">\n                          <Icon\n                            type=\"dislike\"\n                            theme='outlined'\n                          />\n                        </Tooltip>\n                        <span style={{ paddingLeft: 8, cursor: 'auto' }}>\n                          {useless_count || 0}\n                        </span>\n                      </span>\n                    ];\n\n                    return (\n                      <Comment\n                        className=\"cutsom-ant-comment\"\n                        key={index}\n                        actions={actions}\n                        author={(\n                          <>\n                            <span>{author.name}</span>\n                            <Rate\n                              className=\"custom-ant-rate\"\n                              disabled\n                              defaultValue={rating.value}\n                              count={rating.max} />\n                          </>\n                        )}\n                        avatar={(\n                          <Avatar\n                            src={author.avatar}\n                            alt={author.alt}\n                          />\n                        )}\n                        content={(\n                          <p>{content}</p>\n                        )}\n                        datetime={(\n                          <Tooltip title={moment(created_at).format('YYYY-MM-DD HH:mm:ss')}>\n                            <span>{moment(created_at).fromNow()}</span>\n                          </Tooltip>\n                        )}\n                      />\n                    );\n                  })\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* 抽屉 */}\n      <Drawer\n        placement=\"top\"\n        height=\"460px\"\n        destroyOnClose={true}\n        onClose={closePlayBox}\n        visible={isOpenPlayBox}\n      >\n        <div className=\"container-video clearfix\">\n          <div className=\"video-box\">\n            <video src={currentPlayData.src} autoPlay={currentPlayData.isAutoPlay} controls></video>\n            <div className=\"box-list\">\n              <List\n                className=\"list\"\n                itemLayout=\"vertical\"\n                size=\"small\"\n                dataSource={detailData.trailers}\n                renderItem={(item: any, index: number) => (\n                  <List.Item\n                    className={[\"list-item\", index === currentPlayData.index ? \"active\" : \"\"].join(\" \")}\n                    key={item.id}\n                    extra={<img alt=\"logo\" src={item.medium} />}\n                    onClick={(ev) => { playThisVideo(item.resource_url, index) }} >\n                    <List.Item.Meta\n                      title={item.title}\n                    />\n                  </List.Item>\n                )}\n              />\n            </div>\n          </div>\n        </div>\n      </Drawer>\n    </>\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { List, Pagination, Affix } from 'antd';\nimport { ListSkeleton } from '../skeletons/Home';\nimport TopNav from '../components/TopNav';\nimport Footer from '../components/Footer';\nimport { getContentBySearch, getHotShowing } from '../api';\nimport { reSerialize } from '../utils';\nimport '../css/Search.css';\n\n\nexport default function (props: any) {\n\n  let { location } = props;\n  let { search } = location;\n  search = search.slice(1); // ?q=123 -> q=123\n  let query: any = reSerialize(search);\n  let searchStr = query.q;\n  let searchPageSize = 5;\n  let [searchData, setSearchData] = useState<any>({});\n  let [hotShowList, setHotShowList] = useState([]);\n  let [isLoadingHotShow, setIsLoadingHotShow] = useState(true);\n  let refPageBox: any = useRef();\n  let refRateBox: any = useRef();\n\n\n  function changeSearchData(current: number) {\n    getContentBySearch(searchStr, {\n      count: searchPageSize,\n      start: (current - 1) * searchPageSize,\n    })\n      .then(({ data }: any) => {\n        setSearchData(data);\n      });\n  }\n\n  // componentDidMount 只执行一次（第二个参数设置了空数组）\n  useEffect(() => {\n    changeSearchData(1);\n\n    getHotShowing({\n      start: 0,\n      count: 12,\n    })\n      .then(({ data }: any) => {\n        let { subjects } = data;\n\n        setHotShowList(subjects);\n        setIsLoadingHotShow(false);\n\n        var refPageBoxHeight = window.getComputedStyle(refPageBox.current)[\"height\"];\n        var refRateBoxHeight = window.getComputedStyle(refRateBox.current)[\"height\"];\n        if (refRateBoxHeight && refPageBoxHeight) {\n          refPageBoxHeight = refPageBoxHeight.replace(\"px\", \"\");\n          refRateBoxHeight = refRateBoxHeight.replace(\"px\", \"\");\n          if (+refRateBoxHeight > +refPageBoxHeight) {\n            refPageBox.current.style.cssText = `;min-height:${refRateBoxHeight}px;`;\n          }\n\n        }\n\n      });\n  }, []);\n\n  return (\n    <div>\n      <div className=\"header clearfix\">\n        <TopNav />\n      </div>\n      <div className=\"page page-search\" ref={refPageBox}>\n        <div className=\"search-result-list\">\n          <List\n            itemLayout=\"vertical\"\n            size=\"small\"\n            dataSource={searchData.subjects}\n            renderItem={(item: any, index: number) => {\n              let { images, title, id } = item;\n              return (\n                <List.Item\n                  className=\"list-item\"\n                  key={id}>\n                  <List.Item.Meta\n                    avatar={\n                      <Link to={`/detail/${id}`}>\n                        <img alt=\"logo\" className=\"item-img\" src={images.medium} />\n                      </Link>}\n                    title={title}\n                    description={\n                      <div className=\"desc\">\n                        {item.directors.length > 0 &&\n                          <div className=\"directors\">\n                            <label>导演：</label>\n                            {\n                              item.directors.map((item: any, index: number) => {\n                                return <a key={index} className=\"person\">{item.name}</a>\n                              })\n                            }\n                          </div>\n                        }\n                        {item.casts.length > 0 &&\n                          <div className=\"actors\">\n                            <label>演员：</label>\n                            {\n                              item.casts.map((item: any, index: number) => {\n                                let split = \"\";\n                                if (index !== 0) {\n                                  split = \"/\";\n                                }\n                                return (\n                                  <span key={index}>\n                                    {split}\n                                    <a className=\"person\">{item.name}</a>\n                                  </span>\n                                );\n                              })\n                            }\n                          </div>\n                        }\n                        {item.genres.length > 0 &&\n                          <div className=\"tags\">\n                            <label>标签：</label>\n                            {\n                              item.genres.map((tag: string, index: number) => {\n                                let split = \"\";\n                                if (index !== 0) {\n                                  split = \"/\";\n                                }\n                                return (\n                                  <span key={index}>\n                                    {split}\n                                    <a className=\"person\">{tag}</a>\n                                  </span>\n                                );\n                              })\n                            }\n                          </div>\n                        }\n                      </div>\n                    }\n                  />\n                </List.Item>\n              )\n            }} />\n          <Pagination onChange={changeSearchData} total={searchData.total} />\n        </div>\n        <Affix offsetTop={100} className=\"rate-box\">\n          <div ref={refRateBox}>\n            <div className=\"line-raw\">\n              <h2 className=\"raw-title\">热映榜</h2>\n            </div>\n            <ul className=\"goodbox\">\n              {\n                isLoadingHotShow ?\n                  <ListSkeleton row={2} /> :\n                  hotShowList.map((item: any, index: number) => {\n                    let { id, title, rating } = item;\n                    let { average } = rating;\n                    return (\n                      <li className=\"goodbox-rate\" key={index}>\n                        <Link to={`/detail/${id}`}>\n                          <h3 className=\"title\">{title}</h3>\n                          <span className=\"rank\">{index + 1}</span>\n                          <span className=\"box\">{average} 分</span>\n                        </Link>\n                      </li>\n                    );\n                  })\n              }\n            </ul>\n          </div>\n        </Affix>\n      </div>\n      <Footer />\n    </div>\n  );\n\n};\n","import React, { useState, useEffect } from 'react';\nimport TopNav from '../components/TopNav';\nimport { getWallPaper } from \"../api\";\nimport '../css/NotFound.css';\n\nexport default function NotFound() {\n  let BASE_URL = \"http://cn.bing.com\";\n  let [src, setSrc] = useState(\"\");\n\n  useEffect(() => {\n    getWallPaper()\n      .then(({ data }: any) => {\n        let { images } = data;\n\n        setSrc(BASE_URL + images[0].url);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"page page-404\" style={{\n        backgroundImage: `url(${src})`,\n      }}>\n      </div>\n      <div className=\"header header-404 clearfix\">\n        <TopNav noAffix slotTitle={\n          <h1 className=\"page-404-title\">404</h1>\n        } />\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport routerMap from \"./config\";\n\n\nfunction CustomRoute(props: any) {\n  let path = props.location.pathname;\n\n  props.beforeEnter && props.beforeEnter(path);\n\n  // '/'-> '/home\n  if (path === '/') return <Redirect to='/home' />\n\n  // if can match\n  let matchRoute: any = routerMap.find(item => {\n    let url = item.path;\n    // /detail/:id -> \\\\/detail\\\\/[^/+]\n    url = url.replace(/(\\:.+)/g, \"[^/]+\").replace(/\\//g, \"\\\\/\");\n\n    return new RegExp(`${url}(\\\\/|\\\\/)?$`, 'gi').test(path);\n  });\n\n  if (matchRoute) {\n    return <Route exact={!matchRoute.hasChild} path={matchRoute.path} component={matchRoute.component} />\n  }\n  return <Redirect to='/404' />\n}\n\nexport default function (props: any) {\n  return (\n    <BrowserRouter>\n      <>\n        <Switch>\n          <CustomRoute {...props} />\n        </Switch>\n      </>\n    </BrowserRouter>\n  );\n}\n\n\n","import React, { Component } from 'react';\nimport { LocaleProvider } from 'antd';\nimport zhCN from 'antd/lib/locale-provider/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nimport RouterView from './router/RouterView';\n\nmoment.locale('zh-cn');\n\nfunction routerBeforeEnterHook(path: string) {\n  // 滚动条复位，回到原点\n  window.scrollTo({\n    top: 0,\n    behavior: \"smooth\"\n  });\n  // 取消所有请求\n  window.cancalXHRList.forEach((source: any) => {\n    source.cancel(\"cancel xhr\");\n  });\n}\n\nfunction App() {\n  return (\n    <LocaleProvider locale={zhCN}>\n      <div className=\"App\">\n        <RouterView beforeEnter={routerBeforeEnterHook} />\n      </div>\n    </LocaleProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loading.130d74ed.svg\";"],"sourceRoot":""}